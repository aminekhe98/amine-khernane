{"ast":null,"code":"var _jsxFileName = \"/Users/amine/WEB/REACT/weather-3d/src/App.js\";\nimport React from \"react\";\nimport Titels from \"./Components/Title\";\nimport Form from \"./Components/Form\";\nimport Weather from \"./Components/Weather\";\nconst API_key = \"961cd45b0c76819135b50d3b6d1590c8\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      pressure: undefined,\n      humidity: undefined,\n      windspeed: undefined,\n      direction: undefined,\n      precipitation: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      var city = e.target.elements.city.value;\n      var country = e.target.elements.country.value; //const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=961cd45b0c76819135b50d3b6d1590c8`);\n      const weather_data = await api_call.json();\n      console.log(weather_data);\n\n      if (city && country) {\n        console.log(weather_data);\n        this.setState({\n          //calDeg : this.calDeg(weather_data.main.temp),\n          //temperature : weather_data.main.temp,\n          pressure: weather_data.main.pressure,\n          humidity: weather_data.main.humidity,\n          windspeed: weather_data.wind.speed\n        });\n      }\n    };\n  }\n\n  calDeg(temperature) {\n    let degree = Math.floor(temperature - 273.15);\n    return degree;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Titels, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.calDeg,\n      pressure: this.state.pressure,\n      humidity: this.state.humidity,\n      windspeed: this.state.windspeed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/amine/WEB/REACT/weather-3d/src/App.js"],"names":["React","Titels","Form","Weather","API_key","App","Component","state","temperature","undefined","pressure","humidity","windspeed","direction","precipitation","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","weather_data","json","console","log","setState","main","wind","speed","calDeg","degree","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE7BC,KAF6B,GAEtB;AACHC,MAAAA,WAAW,EAAGC,SADX;AAEHC,MAAAA,QAAQ,EAAGD,SAFR;AAGHE,MAAAA,QAAQ,EAAGF,SAHR;AAIHG,MAAAA,SAAS,EAAEH,SAJR;AAKHI,MAAAA,SAAS,EAAEJ,SALR;AAMHK,MAAAA,aAAa,EAAGL;AANb,KAFsB;;AAAA,SAiB7BM,UAjB6B,GAiBhB,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAIC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAAlC;AACA,UAAIC,OAAO,GAAGN,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAAxC,CAJsB,CAMtB;;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,sDAAqDN,IAAK,IAAGI,OAAQ,yCAAvE,CAA5B;AACA,YAAMG,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACA,UAAIP,IAAI,IAAII,OAAZ,EAAoB;AAChBK,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,aAAKI,QAAL,CAAc;AACV;AACA;AACAnB,UAAAA,QAAQ,EAAGe,YAAY,CAACK,IAAb,CAAkBpB,QAHnB;AAIVC,UAAAA,QAAQ,EAAGc,YAAY,CAACK,IAAb,CAAkBnB,QAJnB;AAKVC,UAAAA,SAAS,EAAGa,YAAY,CAACM,IAAb,CAAkBC;AALpB,SAAd;AAOH;AACJ,KArC4B;AAAA;;AAY7BC,EAAAA,MAAM,CAACzB,WAAD,EAAa;AACf,QAAI0B,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW5B,WAAW,GAAC,MAAvB,CAAb;AACA,WAAO0B,MAAP;AACH;;AAwBDG,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKtB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AACI,MAAA,WAAW,EAAI,KAAKR,KAAL,CAAW0B,MAD9B;AAEI,MAAA,QAAQ,EAAI,KAAK1B,KAAL,CAAWG,QAF3B;AAGI,MAAA,QAAQ,EAAI,KAAKH,KAAL,CAAWI,QAH3B;AAII,MAAA,SAAS,EAAI,KAAKJ,KAAL,CAAWK,SAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAYH;;AApD4B;;AAuDjC,eAAeP,GAAf","sourcesContent":["import React from \"react\"\nimport Titels from \"./Components/Title\"\nimport Form from \"./Components/Form\"\nimport Weather from \"./Components/Weather\"\n\nconst API_key = \"961cd45b0c76819135b50d3b6d1590c8\";\n\n\nclass App extends React.Component{\n\n    state ={\n        temperature : undefined,\n        pressure : undefined,\n        humidity : undefined,\n        windspeed: undefined,\n        direction: undefined,\n        precipitation : undefined\n\n    }\n\n    calDeg(temperature){\n        let degree = Math.floor(temperature-273.15);\n        return degree\n    }\n\n    getWeather = async (e) => {\n        e.preventDefault();\n\n        var city = e.target.elements.city.value;\n        var country = e.target.elements.country.value;\n\n        //const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n        const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=961cd45b0c76819135b50d3b6d1590c8`);\n        const weather_data = await api_call.json();\n        console.log(weather_data);\n        if (city && country){\n            console.log(weather_data);\n            this.setState({\n                //calDeg : this.calDeg(weather_data.main.temp),\n                //temperature : weather_data.main.temp,\n                pressure : weather_data.main.pressure,\n                humidity : weather_data.main.humidity,\n                windspeed : weather_data.wind.speed, \n            }); \n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Titels />\n                <Form getWeather={this.getWeather}/>\n                <Weather \n                    temperature = {this.state.calDeg}\n                    pressure = {this.state.pressure} \n                    humidity = {this.state.humidity}\n                    windspeed = {this.state.windspeed}   \n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}